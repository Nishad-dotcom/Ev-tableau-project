<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='Electric_Vehicle_Population_Data' inline='true' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electric_Vehicle_Population_Data' name='textscan.0sri1rc1skgh0h1eyz5ck0gyha65'>
            <connection class='textscan' directory='C:/Users/nisha/Downloads' filename='Electric_Vehicle_Population_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sri1rc1skgh0h1eyz5ck0gyha65' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='VIN (1-10)' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Postal Code' ordinal='4' />
            <column datatype='integer' name='Model Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
            <column datatype='integer' name='Electric Range' ordinal='10' />
            <column datatype='integer' name='Base MSRP' ordinal='11' />
            <column datatype='integer' name='Legislative District' ordinal='12' />
            <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
            <column datatype='string' name='Vehicle Location' ordinal='14' />
            <column datatype='string' name='Electric Utility' ordinal='15' />
            <column datatype='integer' name='2020 Census Tract' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN (1-10)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VIN (1-10)]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>VIN (1-10)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOL Vehicle ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOL Vehicle ID]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>DOL Vehicle ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle Location]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Vehicle Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1631991916636905472] / TOTAL([Calculation_1631991916636905472])'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
      </column>
      <column caption='Average elect range' datatype='real' name='[Calculation_1631991916637863937]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Electric Range])' />
      </column>
      <column caption='Total BEV vehicle' datatype='integer' name='[Calculation_1631991916640681986]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(IF  [Electric Vehicle Type]=&quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;THEN[DOL Vehicle ID]&#13;&#10;END)' />
      </column>
      <column caption='% of BEV vehicles' datatype='real' name='[Calculation_1631991916642131971]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1631991916640681986]/[Calculation_1631991916636905472]' />
      </column>
      <column caption='total phev vehicles' datatype='integer' name='[Calculation_1631991916642897924]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(IF [Electric Vehicle Type]=&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END)' />
      </column>
      <column caption='% of PHEV' datatype='real' name='[Calculation_1631991916643504133]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1631991916642897924]/[Calculation_1631991916636905472]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
          <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
          <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
        </aliases>
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Vin (1-10)' datatype='string' name='[VIN (1-10)]' role='dimension' type='nominal' />
      <column caption='Electric_Vehicle_Population_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <group caption='Action (Make)' hidden='true' name='[Action (Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Clean Alternative Fuel Vehicle Eligible&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eligibility unknown as battery range has not been researched&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Not eligible due to low battery range&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <filter class='quantitative' column='[Model Year]' filter-group='2' included-values='in-range'>
        <min>2011</min>
        <max>2024</max>
      </filter>
      <object-graph>
        <objects>
          <object caption='Electric_Vehicle_Population_Data.csv' id='Electric_Vehicle_Population_Data.csv_1D1970B2D6DE4A91B52EBAE397BB19E5'>
            <properties context=''>
              <relation connection='textscan.0sri1rc1skgh0h1eyz5ck0gyha65' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='VIN (1-10)' ordinal='0' />
                  <column datatype='string' name='County' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='integer' name='Postal Code' ordinal='4' />
                  <column datatype='integer' name='Model Year' ordinal='5' />
                  <column datatype='string' name='Make' ordinal='6' />
                  <column datatype='string' name='Model' ordinal='7' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
                  <column datatype='integer' name='Electric Range' ordinal='10' />
                  <column datatype='integer' name='Base MSRP' ordinal='11' />
                  <column datatype='integer' name='Legislative District' ordinal='12' />
                  <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
                  <column datatype='string' name='Vehicle Location' ordinal='14' />
                  <column datatype='string' name='Electric Utility' ordinal='15' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
      <datasources>
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='15' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
        <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
        </column>
        <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
            <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
            <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
          </aliases>
        </column>
        <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
        <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Make]' role='dimension' type='nominal' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
        <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]'>
        <groupfilter function='level-members' level='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]'>
        <groupfilter function='member' level='[none:Electric Vehicle Type:nk]' member='&quot;Battery Electric Vehicle (BEV)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_1631991916636905472]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:State:nk]' member='&quot;AP&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;AR&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;AZ&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;BC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;CO&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;CT&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;DC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;DE&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;FL&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;GA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;ID&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;IN&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;KS&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;KY&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MD&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MN&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MO&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MS&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;MT&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NE&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NH&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NV&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;NY&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;OH&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;OR&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;SC&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;UT&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;VA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
          <groupfilter function='member' level='[none:State:nk]' member='&quot;WY&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Average electric range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Average elect range' datatype='real' name='[Calculation_1631991916637863937]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Electric Range])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916637863937]' derivation='User' name='[usr:Calculation_1631991916637863937:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916637863937:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'>Avg Electric range</run>
                <run><![CDATA[
<[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916637863937:qk]>miles]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{410C2FBD-5C09-496A-AD1A-C26449E01E79}' />
    </worksheet>
    <worksheet name='Top 10 vehicles  by make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[pcto:usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[pcto:usr:Calculation_1631991916636905472:qk]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]</run>
                <run>&gt;\\&lt;</run>
                <run>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[pcto:usr:Calculation_1631991916636905472:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</rows>
        <cols>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]</cols>
      </table>
      <simple-id uuid='{6E8C7E69-EC81-422F-9F04-F9E8330AB441}' />
    </worksheet>
    <worksheet name='Total BEV vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='Total BEV vehicle' datatype='integer' name='[Calculation_1631991916640681986]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(IF  [Electric Vehicle Type]=&quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;THEN[DOL Vehicle ID]&#13;&#10;END)' />
            </column>
            <column caption='% of BEV vehicles' datatype='real' name='[Calculation_1631991916642131971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1631991916640681986]/[Calculation_1631991916636905472]' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916640681986]' derivation='User' name='[usr:Calculation_1631991916640681986:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1631991916642131971]' derivation='User' name='[usr:Calculation_1631991916642131971:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916642131971:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916640681986:qk]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916642131971:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'>Total BEV vehicles</run>
                <run><![CDATA[
<[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916640681986:qk]>
%of total:<[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916642131971:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{89948519-4B9D-40DF-A9BA-03553F7E5E46}' />
    </worksheet>
    <worksheet name='Total vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'>Total Vehicles</run>
                <run><![CDATA[
<[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9CF83705-2E3E-4888-A35E-B378D46B06BB}' />
    </worksheet>
    <worksheet name='Total vehicles  y state'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[Longitude (generated)]' field-type='quantitative' max='-7386330.8080915781' min='-14211190.927365625' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[Latitude (generated)]' field-type='quantitative' max='6566463.328982465' min='2627761.8124122862' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' palette='green_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
              <lod column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]' />
              <geometry column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[Latitude (generated)]</rows>
        <cols>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C039BBE3-0F38-4C7B-8E1D-B6C20ECA1330}' />
    </worksheet>
    <worksheet name='Total vehicles by CAFV eligility'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[pcto:usr:Calculation_1631991916636905472:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <wedge-size column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[pcto:usr:Calculation_1631991916636905472:qk:2]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6F6D1511-AF7D-468D-B83C-54769986CEB8}' />
    </worksheet>
    <worksheet name='top vehicles by model'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[pcto:usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0t1rsyq17no85a1dtl2o91kdd6no].[pcto:usr:Calculation_1631991916636905472:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;918&quot;</bucket>
              <bucket>&quot;BENTAYGA&quot;</bucket>
              <bucket>&quot;FLYING SPUR&quot;</bucket>
              <bucket>&quot;745LE&quot;</bucket>
              <bucket>&quot;A8 E&quot;</bucket>
              <bucket>&quot;CITY&quot;</bucket>
              <bucket>&quot;745E&quot;</bucket>
              <bucket>&quot;ROADSTER&quot;</bucket>
              <bucket>&quot;ACCORD&quot;</bucket>
              <bucket>&quot;TRANSIT CONNECT ELECTRIC&quot;</bucket>
              <bucket>&quot;GV70&quot;</bucket>
              <bucket>&quot;S-CLASS&quot;</bucket>
              <bucket>&quot;A7&quot;</bucket>
              <bucket>&quot;TONALE&quot;</bucket>
              <bucket>&quot;CT6&quot;</bucket>
              <bucket>&quot;C-CLASS&quot;</bucket>
              <bucket>&quot;G80&quot;</bucket>
              <bucket>&quot;KARMA&quot;</bucket>
              <bucket>&quot;RANGE ROVER&quot;</bucket>
              <bucket>&quot;RANGE ROVER SPORT&quot;</bucket>
              <bucket>&quot;RS E-TRON GT&quot;</bucket>
              <bucket>&quot;S90&quot;</bucket>
              <bucket>&quot;V60&quot;</bucket>
              <bucket>&quot;740E&quot;</bucket>
              <bucket>&quot;PRIUS&quot;</bucket>
              <bucket>&quot;GLE-CLASS&quot;</bucket>
              <bucket>&quot;RZ 450E&quot;</bucket>
              <bucket>&quot;EQ FORTWO&quot;</bucket>
              <bucket>&quot;RAV4&quot;</bucket>
              <bucket>&quot;I-MIEV&quot;</bucket>
              <bucket>&quot;CROSSTREK&quot;</bucket>
              <bucket>&quot;FORTWO&quot;</bucket>
              <bucket>&quot;EQE-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;ELR&quot;</bucket>
              <bucket>&quot;SONATA&quot;</bucket>
              <bucket>&quot;GV60&quot;</bucket>
              <bucket>&quot;Q8&quot;</bucket>
              <bucket>&quot;LYRIQ&quot;</bucket>
              <bucket>&quot;NX&quot;</bucket>
              <bucket>&quot;CORSAIR&quot;</bucket>
              <bucket>&quot;B-CLASS&quot;</bucket>
              <bucket>&quot;I8&quot;</bucket>
              <bucket>&quot;OPTIMA&quot;</bucket>
              <bucket>&quot;S60&quot;</bucket>
              <bucket>&quot;EQE-CLASS SUV&quot;</bucket>
              <bucket>&quot;E-TRON GT&quot;</bucket>
              <bucket>&quot;PANAMERA&quot;</bucket>
              <bucket>&quot;TUCSON&quot;</bucket>
              <bucket>&quot;BZ4X&quot;</bucket>
              <bucket>&quot;SANTA FE&quot;</bucket>
              <bucket>&quot;CX-90&quot;</bucket>
              <bucket>&quot;Q5&quot;</bucket>
              <bucket>&quot;AVIATOR&quot;</bucket>
              <bucket>&quot;FORTWO ELECTRIC DRIVE&quot;</bucket>
              <bucket>&quot;IONIQ 6&quot;</bucket>
              <bucket>&quot;EQB-CLASS&quot;</bucket>
              <bucket>&quot;E-TRON SPORTBACK&quot;</bucket>
              <bucket>&quot;EQS-CLASS SEDAN&quot;</bucket>
              <bucket>&quot;EQS-CLASS SUV&quot;</bucket>
              <bucket>&quot;AIR&quot;</bucket>
              <bucket>&quot;GLC-CLASS&quot;</bucket>
              <bucket>&quot;KONA&quot;</bucket>
              <bucket>&quot;COUNTRYMAN&quot;</bucket>
              <bucket>&quot;IONIQ&quot;</bucket>
              <bucket>&quot;I-PACE&quot;</bucket>
              <bucket>&quot;SOUL EV&quot;</bucket>
              <bucket>&quot;FOCUS&quot;</bucket>
              <bucket>&quot;SPARK&quot;</bucket>
              <bucket>&quot;TRANSIT&quot;</bucket>
              <bucket>&quot;X3&quot;</bucket>
              <bucket>&quot;Q4&quot;</bucket>
              <bucket>&quot;ARIYA&quot;</bucket>
              <bucket>&quot;EDV&quot;</bucket>
              <bucket>&quot;ESCAPE&quot;</bucket>
              <bucket>&quot;C40&quot;</bucket>
              <bucket>&quot;CAYENNE&quot;</bucket>
              <bucket>&quot;SPORTAGE&quot;</bucket>
              <bucket>&quot;530E&quot;</bucket>
              <bucket>&quot;SOUL&quot;</bucket>
              <bucket>&quot;330E&quot;</bucket>
              <bucket>&quot;IX&quot;</bucket>
              <bucket>&quot;SORENTO&quot;</bucket>
              <bucket>&quot;TAYCAN&quot;</bucket>
              <bucket>&quot;SOLTERRA&quot;</bucket>
              <bucket>&quot;A3&quot;</bucket>
              <bucket>&quot;HARDTOP&quot;</bucket>
              <bucket>&quot;Q5 E&quot;</bucket>
              <bucket>&quot;KONA ELECTRIC&quot;</bucket>
              <bucket>&quot;GRAND CHEROKEE&quot;</bucket>
              <bucket>&quot;I4&quot;</bucket>
              <bucket>&quot;PS2&quot;</bucket>
              <bucket>&quot;F-150&quot;</bucket>
              <bucket>&quot;OUTLANDER&quot;</bucket>
              <bucket>&quot;CLARITY&quot;</bucket>
              <bucket>&quot;500&quot;</bucket>
              <bucket>&quot;R1S&quot;</bucket>
              <bucket>&quot;XC40&quot;</bucket>
              <bucket>&quot;PRIUS PLUG-IN&quot;</bucket>
              <bucket>&quot;XC60&quot;</bucket>
              <bucket>&quot;E-TRON&quot;</bucket>
              <bucket>&quot;E-GOLF&quot;</bucket>
              <bucket>&quot;BOLT EUV&quot;</bucket>
              <bucket>&quot;XC90&quot;</bucket>
              <bucket>&quot;R1T&quot;</bucket>
              <bucket>&quot;RAV4 PRIME&quot;</bucket>
              <bucket>&quot;C-MAX&quot;</bucket>
              <bucket>&quot;IONIQ 5&quot;</bucket>
              <bucket>&quot;EV6&quot;</bucket>
              <bucket>&quot;FUSION&quot;</bucket>
              <bucket>&quot;I3&quot;</bucket>
              <bucket>&quot;X5&quot;</bucket>
              <bucket>&quot;PRIUS PRIME&quot;</bucket>
              <bucket>&quot;MUSTANG MACH-E&quot;</bucket>
              <bucket>&quot;WRANGLER&quot;</bucket>
              <bucket>&quot;PACIFICA&quot;</bucket>
              <bucket>&quot;NIRO&quot;</bucket>
              <bucket>&quot;ID.4&quot;</bucket>
              <bucket>&quot;VOLT&quot;</bucket>
              <bucket>&quot;MODEL X&quot;</bucket>
              <bucket>&quot;BOLT EV&quot;</bucket>
              <bucket>&quot;MODEL S&quot;</bucket>
              <bucket>&quot;LEAF&quot;</bucket>
              <bucket>&quot;MODEL 3&quot;</bucket>
              <bucket>&quot;MODEL Y&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[:Measure Names]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model:nk] / ([federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk] / [federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]))</rows>
        <cols>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5C253EB7-7108-4514-8CD7-3F5738DA2B92}' />
    </worksheet>
    <worksheet name='total PHEV vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column caption='total phev vehicles' datatype='integer' name='[Calculation_1631991916642897924]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(IF [Electric Vehicle Type]=&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;THEN [DOL Vehicle ID]&#13;&#10;END)' />
            </column>
            <column caption='% of PHEV' datatype='real' name='[Calculation_1631991916643504133]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1631991916642897924]/[Calculation_1631991916636905472]' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916642897924]' derivation='User' name='[usr:Calculation_1631991916642897924:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1631991916643504133]' derivation='User' name='[usr:Calculation_1631991916643504133:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916643504133:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916642897924:qk]' />
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916643504133:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e15759' fontsize='16'>Total PHEV vehicles</run>
                <run><![CDATA[
<[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916642897924:qk]>
%of total:<[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916643504133:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2A39F549-C016-4211-9ED0-8013FB229C27}' />
    </worksheet>
    <worksheet name='total vehiclss by model year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total vehicles by model year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
            <column caption='Total  vehicles' datatype='integer' name='[Calculation_1631991916636905472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1631991916636905472]' derivation='User' name='[usr:Calculation_1631991916636905472:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</column>
            <column>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]' field-type='quantitative' min='2011' range-type='fixedmin' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <reference-line axis-column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-table' value-column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk] + [federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk])</rows>
        <cols>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]</cols>
      </table>
      <simple-id uuid='{175BF492-A21C-4EE8-AD30-C207D4F48E8C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Electric vehicle data analysis'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.0t1rsyq17no85a1dtl2o91kdd6no' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
          <range max='15' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0t1rsyq17no85a1dtl2o91kdd6no'>
        <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='16444' id='3' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='74250' x='25250' y='889'>
            <zone h='16444' id='7' name='Total BEV vehicles' show-title='false' w='18563' x='25250' y='889'>
              <layout-cache fixed-size-w='260' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='6' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone h='16444' id='6' name='Total vehicles' show-title='false' w='18562' x='43813' y='889'>
              <layout-cache fixed-size-h='108' fixed-size-w='200' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='6' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone h='16444' id='8' name='total PHEV vehicles' show-title='false' w='18563' x='62375' y='889'>
              <layout-cache fixed-size-w='260' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='6' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone h='16444' id='9' name='Average electric range' show-title='false' w='18562' x='80938' y='889'>
              <layout-cache fixed-size-w='240' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='6' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
          </zone>
          <zone h='40889' id='19' type-v2='empty' w='2000' x='97500' y='58222' />
          <zone h='98222' id='11' param='vert' type-v2='layout-flow' w='24750' x='500' y='889'>
            <zone h='8111' id='15' name='Total vehicles  y state' pane-specification-id='0' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' type-v2='color' w='24000' x='875' y='1556'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='8778' id='23' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='24000' x='875' y='9667'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='8000' id='25' name='Total vehicles by CAFV eligility' pane-specification-id='0' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='color' w='24000' x='875' y='18445'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6778' id='27' mode='checkdropdown' name='total vehiclss by model year' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]' type-v2='filter' values='database' w='24000' x='875' y='26445'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6111' id='28' name='total vehiclss by model year' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]' type-v2='filter' values='database' w='24000' x='875' y='33223'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='6778' id='29' mode='checkdropdown' name='total vehiclss by model year' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]' type-v2='filter' values='database' w='24000' x='875' y='39334'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='6' />
              <format attr='background-color' value='#f5ead76f' />
            </zone-style>
          </zone>
          <zone h='40889' id='16' is-fixed='true' type-v2='layout-basic' w='74250' x='25250' y='17333'>
            <zone h='40889' id='12' param='horz' type-v2='layout-flow' w='37125' x='25250' y='17333'>
              <zone h='40889' id='13' name='total vehiclss by model year' w='37125' x='25250' y='17333'>
                <layout-cache has-max-size-h='true' maxheight='51' minheight='51' minwidth='102' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
            <zone h='40889' id='17' param='horz' type-v2='layout-flow' w='37125' x='62375' y='17333'>
              <zone h='40889' id='14' name='Total vehicles  y state' w='37125' x='62375' y='17333'>
                <layout-cache has-max-size-h='true' maxheight='51' minheight='51' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='40889' id='20' name='Top 10 vehicles  by make' w='24083' x='25250' y='58222'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='40889' id='24' name='Total vehicles by CAFV eligility' w='24083' x='73417' y='58222'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone h='40889' id='26' name='top vehicles by model' w='24084' x='49333' y='58222'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#333333' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2450' minheight='2450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='30' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='136' h='16444' id='7' is-fixed='true' name='Total BEV vehicles' show-title='false' w='18563' x='25250' y='889'>
                  <layout-cache fixed-size-w='260' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='136' h='16444' id='6' is-fixed='true' name='Total vehicles' show-title='false' w='18562' x='43813' y='889'>
                  <layout-cache fixed-size-h='108' fixed-size-w='200' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='136' h='16444' id='8' is-fixed='true' name='total PHEV vehicles' show-title='false' w='18563' x='62375' y='889'>
                  <layout-cache fixed-size-w='260' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='136' h='16444' id='9' is-fixed='true' name='Average electric range' show-title='false' w='18562' x='80938' y='889'>
                  <layout-cache fixed-size-w='240' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='8778' id='23' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='24000' x='875' y='9667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='27' mode='checkdropdown' name='total vehiclss by model year' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]' type-v2='filter' values='database' w='24000' x='875' y='26445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6111' id='28' name='total vehiclss by model year' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]' type-v2='filter' values='database' w='24000' x='875' y='33223'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6778' id='29' mode='checkdropdown' name='total vehiclss by model year' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]' type-v2='filter' values='database' w='24000' x='875' y='39334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40889' id='13' is-fixed='true' name='total vehiclss by model year' w='37125' x='25250' y='17333'>
                  <layout-cache has-max-size-h='true' maxheight='51' minheight='51' minwidth='102' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40889' id='14' is-fixed='true' name='Total vehicles  y state' w='37125' x='62375' y='17333'>
                  <layout-cache has-max-size-h='true' maxheight='51' minheight='51' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='8111' id='15' name='Total vehicles  y state' pane-specification-id='0' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' type-v2='color' w='24000' x='875' y='1556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40889' id='20' is-fixed='true' name='Top 10 vehicles  by make' w='24083' x='25250' y='58222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40889' id='26' is-fixed='true' name='top vehicles by model' w='24084' x='49333' y='58222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40889' id='24' is-fixed='true' name='Total vehicles by CAFV eligility' w='24083' x='73417' y='58222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='8000' id='25' name='Total vehicles by CAFV eligility' pane-specification-id='0' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type-v2='color' w='24000' x='875' y='18445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#333333' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{328D13FE-04C1-478A-A86B-C67F6D1D8300}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>150422</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E671C96C-4EA7-419A-A466-BB01F6EE13C3}' />
    </window>
    <window class='worksheet' name='Average electric range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CABA47CD-6E39-4F23-814D-1DDFD20CE205}' />
    </window>
    <window class='worksheet' name='Total BEV vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54DA8144-5833-46B1-8E10-FB827C8DEE62}' />
    </window>
    <window class='worksheet' name='total PHEV vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CE5637D-0C93-4F09-90D3-2EB1244FC49E}' />
    </window>
    <window class='worksheet' name='total vehiclss by model year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model Year:qk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC435FE5-B537-4E3C-9EEE-EF8A29C75E1D}' />
    </window>
    <window class='worksheet' name='Total vehicles  y state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5497BA0-9C47-46FC-BE25-8591BD4396F6}' />
    </window>
    <window class='worksheet' name='Top 10 vehicles  by make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]' type='filter' />
            <card param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1FF6866-FB0B-479C-8182-59CE1D06D15E}' />
    </window>
    <window class='worksheet' name='Total vehicles by CAFV eligility'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D072D41-F3CC-4E0A-8EE6-BF896DA99CB0}' />
    </window>
    <window class='worksheet' name='top vehicles by model'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation_1631991916636905472:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Utility:nk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Make:nk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Model:nk]</field>
            <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[usr:Calculation1:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAE4D36A-E499-4E46-A59F-07F40177B0D7}' />
    </window>
    <window class='dashboard' maximized='true' name='Electric vehicle data analysis'>
      <viewpoints>
        <viewpoint name='Average electric range'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 vehicles  by make'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total BEV vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total vehicles  y state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total vehicles by CAFV eligility'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0t1rsyq17no85a1dtl2o91kdd6no].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='top vehicles by model' />
        <viewpoint name='total PHEV vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total vehiclss by model year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{17571A02-358F-4E4A-8739-D1A5E0BF9A70}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='62' name='Average electric range' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Electric vehicle data analysis' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 vehicles  by make' width='192'>
      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
    </thumbnail>
    <thumbnail height='83' name='Total BEV vehicles' width='192'>
      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
    </thumbnail>
    <thumbnail height='62' name='Total vehicles' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total vehicles  y state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total vehicles by CAFV eligility' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top vehicles by model' width='192'>
      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
    </thumbnail>
    <thumbnail height='83' name='total PHEV vehicles' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='total vehiclss by model year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
